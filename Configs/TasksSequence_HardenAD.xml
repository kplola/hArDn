<?xml version="1.0" encoding="utf-8"?>
<Settings>
<!-- ##################################################################################################################################### -->
<!-- Revision: 2021/08/12 by loic.veirman@mssec.Fr                                                                                         -->
<!-- ##################################################################################################################################### -->
  <OrganizationalUnits>
    <!-- The section <ouTree> handle the base model for OU creation.                                                                       -->
    <!-- When calling the function [Set-OUTree], you need to add as parameter the "OU class" name of the tree structure you want to add.   -->
    <!-- This could also be used to manage new OU generation.                                                                              -->
    <ouTree>
      <!-- CLASS: SMB-ADMIN-FR                                                                                                             -->
      <!-- This class generate an OU tree used for administration purpose in a tiering model. This is the French Edtiion.                  -->
      <OU Class="SMB-ADMIN-FR" Name="Administration" Description="OU D'administration des comptes à privilèges">
				<ChildOU>
          <Name>Comptes Administration</Name>
          <Description>Comptes d'administration Tier 1 et Tier 2</Description>
				</ChildOU>

        <ChildOU>
          <Name>Comptes Administration Tier0</Name>
          <Description>Comptes d'administration Tier 0</Description>
        </ChildOU>
        
        <ChildOU>
          <Name>Comptes Services</Name>
          <Description>Comptes de services</Description>
          
          <ChildOU>
            <Name>Synchronisation AAD</Name>
            <Description>Comptes de services synchronisés avec Azure AD</Description>
					</ChildOU>
				
          <ChildOU>
            <Name>Désactivés</Name>
            <Description>Objets désactivés</Description>
          </ChildOU>	
				</ChildOU>
        
        <ChildOU>
          <Name>Comptes Services Tier0</Name>
          <Description>Comptes de services a haut privilèges</Description>

          <ChildOU>
            <Name>Désactivés</Name>
            <Description>Objets désactivés</Description>
          </ChildOU>
        </ChildOU>
				
        <ChildOU>
          <Name>Groupes Administration</Name>
          <Description>Groupes d'administration Tier 1 et Tier 2</Description>
				</ChildOU>

        <ChildOU>
          <Name>Groupes Administration Tier0</Name>
          <Description>Groupes d'administration Tier 0</Description>
        </ChildOU>
		
			</OU>

      <!-- CLASS: SMB-ADMIN-EN                                                                                                             -->
      <!-- This class generate an OU tree used for administration purpose in a tiering model. This is the English Edtiion.                 -->
      <OU Class="SMB-ADMIN-EN" Name="Administration" Description="Privileged accounts administrative OU">
				<ChildOU>
          <Name>Admin Accounts</Name>
          <Description>Admin Accounts Tier 1 and Tier 2</Description>
        </ChildOU>

        <ChildOU>
          <Name>Admin Accounts (Tier 0)</Name>
          <Description>Admin Accounts Tier 0</Description>
        </ChildOU>

        <ChildOU>
          <Name>Service Accounts</Name>
          <Description>Service Accounts</Description>

          <ChildOU>
            <Name>AAD Sync</Name>
            <Description>Azure AD synced service accounts</Description>
          </ChildOU>

          <ChildOU>
            <Name>Disabled</Name>
            <Description>Disabled Accounts</Description>
          </ChildOU>
				</ChildOU>

        <ChildOU>
          <Name>Service Accounts (Tier 0)</Name>
          <Description>High Privileges Service Accounts</Description>
        </ChildOU>

        <ChildOU>
          <Name>Administration Groups</Name>
          <Description>Administration Groups for Tier 1 and Tier 2</Description>
				</ChildOU>

        <ChildOU>
          <Name>Administration Groups (Tier 0)</Name>
          <Description>Administration Groups for Tier 0</Description>
        </ChildOU>

			</OU>

      <!-- CLASS: PROVISIONNING-FR                                                                                                         -->
      <!-- This class generate an OU tree used for provisionning objects in a default location. This is the French Edtiion.                -->
      <OU Class="PROVISIONNING-FR" Name="Integration" Description="OU d'intégration des nouveaux objets par défaut">
				<ChildOU>
          <Name>Utilisateurs</Name>
          <Description>Nouveaux objets utilisateurs</Description>
        </ChildOU>

        <ChildOU>
					<Name>Ordinateurs</Name>
					<Description>Nouveaux objets ordinateurs</Description>
				</ChildOU>
			</OU>

      <!-- CLASS: PROVISIONNING-EN                                                                                                         -->
      <!-- This class generate an OU tree used for provisionning objects in a default location. This is the English Edtiion.               -->     
      <OU Class="PROVISIONNING-EN" Name="Provisionning" Description="New objects provisionning OU">
				<ChildOU>
          <Name>Users</Name>
          <Description>New user objects</Description>
        </ChildOU>

        <ChildOU>
          <Name>Computers</Name>
          <Description>New computer objects</Description>
        </ChildOU>
			</OU>
		</ouTree>
	</OrganizationalUnits>
  
	<GroupPolicies>
    <!-- ################################################################################################################################# -->
    <!-- The <translation> section ease the script to translate identities from the lab domain to the integration domain.                  -->
    <!-- When a group policy contains a referal to an identity, such as a user or a group, you will have to match the originating ID to    -->
    <!-- its ID in the target domain. This could be achieve through a GPO migration table or a rewriting of a XML preference file.         -->
    <!--                                                                                                                                   -->
    <!-- Options Class are as below:                                                                                                       -->
    <!--  > When class object is USER...: the script will raise a call to new ID with Get-ADUser   and refer to the SID         attribute  -->
    <!--  > When class object is GROUP..: the script will raise a call to new ID with Get-ADGroup  and refer to the SID         attribute  -->
    <!--  > When class object is DOMAIN.: the script will raise a call to new ID with Get-ADDomain and refer to the NetBIOSName attribute  -->
    <!--  > When class object is UNCPATH: the script will raise a call to new ID with Get-ADGroup  and refer to the DNSRoot     attribute  -->
    <!-- ################################################################################################################################# -->
    <Translation>
      <Object Class="Domain"  Name="GRP_ADMIN_TIER_0"/>
			<Object Class="Domain"  Name="GRP_ADMIN_STATIONS"/>
			<Object Class="Domain"  Name="GRP_ADMIN_SERVEURS"/>
			<Object Class="Domain"  Name="GRP_ADMIN"/>
			<Object Class="UNCPath" Name="DOMAIN_UNC_PATH"/>
    </Translation>

    <!-- ################################################################################################################################# -->
    <!-- The <WmiFilter> section allows the script to import MOF files to the Group Policy WMI Filters Container.                          -->
    <!-- Once a WMI Filter has been imported, it could be attached to a GPO through this script with te <GpoFilter> reference.             -->
    <!-- All MOF files to import must be located in .\Inputs\GroupPolicies\WmiFilters.                                                     -->
    <!-- Name refers to the display name, as shown in the GUI. Source refers to the source mof file to import.                             -->
    <!-- ################################################################################################################################# -->
    <WmiFilters>
      <!-- OSx64.mof: wmi filter that allow a GPO to be apply only on 64 bits processor architecture.                                      -->
      <Filter Name="OS is 64 bits" Source="OSx64.mof"/>
      
      <!-- OSx86.mof: wmi filter that allow a GPO to be apply only on 32 bits processor architecture.                                      -->
      <Filter Name="OS is 32 bits" Source="OSx86.mof"/>
    </WmiFilters>

    <!-- ################################################################################################################################# -->
    <!-- The <GPO> elements list the Group Policy added (or refreshed) to the target domain.                                               -->
    <!-- Each of this Group Policy is first generated with no data (if not existing), then data is imported from its backup folder.        -->
    <!--   > Name.......: refer to the display name, as shown in the GUI                                                                   -->
    <!--   > Description: description label, as shown in the GUI.                                                                          -->
    <!--   > validation.: if set to  No, the GPO is created and overwrited from its backup. Yes will also link the GPO to its targets.     -->
    <!--                                                                                                                                   -->
    <!-- The script will identify the backup source with the <GpoBackup> attribute - this one should contains {} to be functional.         -->
    <!--   > ID.........: the backup folder name for this GPO backup. The folder is located in .\Inputs\GroupPolicies.                     -->
    <!--                                                                                                                                   -->
    <!-- The <gpoDeny> ID attribute will set the specified identity with permission "Deny Execute" - you can se as many input as requiered.-->
    <!--   > ID......: use either sAMAccountName, object GUID or SID to identify the target identity to deny.                              -->
    <!--                                                                                                                                   -->
    <!-- The <gpoLink> attribute Will link the GPO to the specified target - you can use as many input as requiered.                       -->
    <!--   > Path....: DistinguishedName of the target OU where the GPO have to be linked. Use "RootDN" to refer to the DN of the domain.  -->
    <!--   > Enabled.: "Yes", "No". Teach the script to enable the link or not.                                                            -->
    <!--   > Enforced: "Yes", "No". Teach the script to enforce this stratagy to any descending GPO that normally overcome its parameters. -->
    <!--                                                                                                                                   -->
    <!-- The <GpoFilter> parameter refers to the WMI filter that should be linked to this GPO.                                             -->
    <!--   > WMI.....: the Display Name of the target WMI filter to be used (you can refer to the name section of the MOF import)          -->
    <!-- ################################################################################################################################# -->
    <!--  RESTRICT LOGIN FOR MEMBERS OF GRP_ADMIN_TIER_0 ON ANY STATIONS, EXEPT DC                                                         -->
    <GPO Name="Security - Restriction - Login - Tier 0" 
         Description="Deny any kind of login on a system for GRP_ADMIN_TIER_0. Domain Controllers are not concerned." 
         Validation="Yes">
        <GpoBackup ID="{5D50D6DC-9DA8-4EAD-8EB0-3B609C7AC01C}"/>
        <GpoDeny ID="%SecPri%-9"/>
    </GPO>
    
    <!--  DEPLOY LAPS ON x64 COMPUTERS, EXCEPT DOMAIN CONTROLLERS                                                                          -->
    <GPO Name="Security - Local Administrator Password Solution (x64)" 
         Description="Deploy and Configure LAPS on x64 systems" 
         Validation="Yes">
        <GpoBackup ID="{0F023B0B-6A0A-4C0D-B8B9-F29FC205F900}"/>
			  <GpoDeny ID="%SecPri%-9"/>
			  <GpoFilter WMI="OS is 64 bits"/>
    </GPO>

    <!--  DEPLOY LAPS ON x86 COMPUTERS, EXCEPT DOMAIN CONTROLLERS                                                                          -->
    <GPO Name="Security - Local Administrator Password Solution (x86)" 
         Description="Deploy and Configure LAPS on x64 systems" 
         Validation="Yes">
        <GpoBackup ID="{ED334168-DC3C-4898-8BD0-1ACCE80A79F8}"/>
			  <GpoDeny ID="%SecPri%-9"/>
			  <GpoFilter WMI="OS is 32 bits"/>
    </GPO>

    <!--  CONFIGURE WORKSTATION LOCAL ADMINISTRATORS                                                                                                 -->
    <GPO Name="Security - Local Administrators - Stations" 
         Description="Add GRP_ADMIN_STATIONS to local administrators group on Windows Clients systems." 
         Validation="Yes">
        <GpoBackup ID="{87EA60EA-0337-4A97-902D-041950FF1699}"/>
    </GPO>

    <!--  CONFIGURE SERVERS LOCAL ADMINISTRATORS                                                                                                      -->
    <GPO Name="Security - Local Administrators - servers" 
         Description="Add GRP_ADMIN_SERVEURS to local administrators group on Windows Server systems." 
         Validation="Yes">
        <GpoBackup ID="{44699172-D454-4EFC-8FAB-ECFE6C082C6D}"/>
    </GPO>

    <!--  FORCE GPO REFRESH CYCLE TO 20 MINUTES                                                                                            -->
    <GPO Name="Security - GPO Refresh Cycle - 20 minutes" 
         Description="Enforce refresh cycle to 20 minutes." 
         Validation="Yes">
        <GpoBackup ID="{7B688698-BC99-48AA-B4E5-E7F93F45D9B2}"/>
        <GpoLink Path="RootDN" Enabled="Yes" Enforced="No"/>
    </GPO>

    <!--  CONFIGURE SYSTEM TO LOG EVERRY POWERSHELL COMMAND                                                                                -->
    <GPO Name="Security - PowerShell - Logs" 
         Description="Enable PowerShell logging." 
         Validation="Yes">
        <GpoBackup ID="{536309D4-4900-4753-8BF6-A27E8B69FC78}"/>
        <GpoLink Path="RootDN" Enabled="Yes" Enforced="No"/>
    </GPO>

    <!--  CONFIGURE SYSTEM TO LOCK THE SCREEN AFTER 15 MINUTES                                                                             -->
    <GPO Name="Security - Screenlock - 15 minutes" 
         Description="Enforce screelock after 15 minutes of inactivity." 
         Validation="Yes">
        <GpoBackup ID="{748F5058-F22C-42EB-B6C5-D3D4344E9772}"/>
        <GpoLink Path="RootDN" Enabled="Yes" Enforced="No"/>
    </GPO>

    <!--  CONFIGURE SYSTEM TO PRIORIZE IPV4 UPON IPV6                                                                                      -->
    <GPO Name="Network - IPv4 - Priority" 
         Description="Prioritization IPv4 over IPv6." 
         Validation="Yes">
        <GpoBackup ID="{B8D065EC-7E9F-4B2C-86BE-F05141FB8A57}"/>
        <GpoLink Path="RootDN" Enabled="Yes" Enforced="No"/>
    </GPO>

    <!--  DISABLE LINK-LOCAL MULTICAST NAME RESOLUTION                                                                                     -->
    <GPO Name="Security - Disable LLMNR" 
         Description="Disabling Link-Local Multicast Name Resolution." 
         Validation="Yes">
        <GpoBackup ID="{C91C69B8-5340-4A2B-B302-8815D86302AE}"/>
        <GpoLink Path="RootDN" Enabled="Yes" Enforced="Yes"/>
    </GPO>

    <!--  DISABLE NET SESSION ENUMERATION (BLOODHOUND)                                                                                     -->
    <GPO Name="Security - BloodHound - Block NetCease" 
         Description="Rewrite lanManServer management permission to block BloodHound discovery mecanism." 
         Validation="Yes">
        <GpoBackup ID="{AB5098AC-3481-4D01-A8AC-989ABA263265}"/>
        <GpoLink Path="RootDN" Enabled="Yes" Enforced="Yes"/>
    </GPO>

    <!--  DISABLE PRINT SPOOLER SERVICE                                                                                                    -->
    <GPO Name="Security - Disable Print Spooler Service" 
         Description="Disable the print spooler service on windows systems" 
         Validation="Yes">
        <GpoBackup ID="{43ADF3DC-B776-437E-B856-1CBD67237E16}"/>
    </GPO>
  </GroupPolicies>
	
  <Accounts>
  <!-- ################################################################################################################################### -->
  <!-- The <Account> Section list all user identities to be generated by the script.                                                       -->
  <!-- The script first check if the account is already present in the domain (if so, nothing is done), and if not, it will generatae it.  -->
  <!-- The newly created user is then stored with its random password in a keepass file (.\Outputs\HardenAD.kbdx).                         -->
  <!-- Each account is provided with the following input:                                                                                  -->
  <!--   > GivenName.....: the given name of the account                                                                                   -->
  <!--   > Surname.......: the surname of the account                                                                                      -->
  <!--   > sAMAccountName: the sAMAccountName of the account                                                                               -->
  <!--   > displayName...: the name displayed by the GUI                                                                                   -->
  <!--   > Description...: the description of the account                                                                                  -->
  <!--   > Path..........: the distingsuihedName of the OU containing the account. you can use ROOTDN to efer to the domain DN             -->
  <!-- ################################################################################################################################### -->
    <!-- Fully Empowered Admin account                                                                                                     -->
    <User DisplayName="Compte administration FLEXSI (Tier 0)" 
          Surname="Flexsi" 
          samAccountName="SA-FLEXSI"
          GivenName="Infogérant"
          Description="Compte administration FLEXSI (Tier 0)" 
          Path="OU=Comptes Administration Tier0,OU=Administration,ROOTDN"/>
    
    <!-- Tier 1 admin account                                                                                                              -->
		<User DisplayName="Compte administration FLEXSI (Tier 1 et 2)"      
          Surname="Flexsi" 
          samAccountName="A-FLEXSI"
          GivenName="Infogérant"      
          Description="Compte administration FLEXSI (Tier 1 et 2)"  
          Path="OU=Comptes Administration,OU=Administration,ROOTDN"/>
  </Accounts>
  
	<Groups>
  <!-- ################################################################################################################################### -->
  <!-- The <Groups> Section list all group identities to be generated by the script.                                                       -->
  <!-- The script first check if the group is already present in the domain (if so, nothing is done), and if not, it will generatae it.    -->
  <!-- Each group is provided with the following input:                                                                                    -->
  <!--   > Name..........: the name of the group, also its display name and sAMAccountName                                                 -->
  <!--   > Description...: the description of the group                                                                                    -->
  <!--   > Scope.........: domainLocal, Local, Global or Universal                                                                         -->
  <!--   > Category......: security or distribution                                                                                        -->
  <!--                                                                                                                                     -->
  <!-- In a second time, all groups are populated with the <member> input.                                                                 -->
  <!--   > sAMAccountName: the sAMAccountName of the target member.                                                                        -->
  <!-- ################################################################################################################################### -->
    <!-- GRP_ADMIN_TIER_0: equivalent to domain Admins-->
    <Group name="GRP_ADMIN_TIER_0" 
           Path="OU=Groupes Administration Tier0,OU=Administration,ROOTDN" 
           Description="Groupe d'administration AD" 
           Scope="Global" 
           Category="Security">
          <Member samAccountName="SA-FLEXSI"/>
    </Group>
    
    <!-- GRP_ADMIN_STATIONS: local admin for stations -->
		<Group name="GRP_ADMIN_STATIONS" 
           Path="OU=Groupes Administration,OU=Administration,ROOTDN" 
           Description="Groupe d'administration Workstations" 
           Scope="Global" 
           Category="Security">
    </Group>
    
    <!-- GRP_ADMIN_SERVEURS: local admin for servers -->
		<Group name="GRP_ADMIN_SERVEURS" 
           Path="OU=Groupes Administration,OU=Administration,ROOTDN" 
           Description="Groupe d'administration Serveurs" 
           Scope="Global" 
           Category="Security">
    </Group>
    
    <!-- GRP_ADMIN: allow read to LAPS password -->
		<Group name="GRP_ADMIN" 
           Path="OU=Groupes Administration,OU=Administration,ROOTDN" 
           Description="Groupe d'administration Tier 1 et 2" 
           Scope="Global" 
           Category="Security">
          <Member samAccountName="A-FLEXSI"/>
    </Group>
  </Groups>
  
  <DefaultMembers>
  <!-- ################################################################################################################################### -->
  <!-- The <DefaultMembers> Section list strictely allowed members of a specified group.                                                   -->
  <!-- When the script call the function "Reset-GroupMembership", the function will use this data to leave only mandatory identity.        -->
  <!--   > Member: either a SID or a sAMAccountName. Use %domainSID% to dynamically replace it by the domain SID.                          -->
  <!-- ################################################################################################################################### -->
    <!-- Builtin\Administrators -->
    <Group Target="S-1-5-32-544">
      <Member>%DomainSID%-500</Member>
			<Member>%DomainSID%-512</Member>
      <Member>%DomainSID%-519</Member>
    </Group>

    <!-- Domain Admins -->
    <Group Target="%DomainSID%-512">
      <Member>%DomainSID%-500</Member>
    </Group>
  </DefaultMembers>

  <TaskSchedules BaseDir="C:\_ADM\TasksSchedulesScripts">
  <!-- ################################################################################################################################### -->
  <!-- the <TaskSchedules> section define the sched. tasks to add to the running system and is called by the function New-ScheduleTasks.   -->
  <!-- The following parameters are expected:                                                                                              -->
  <!--   > Name......: The scheduled tasks name, as shown in the GUI.                                                                      -->
  <!--   > Xml.......: The xml file containing a backup of the new scheduled tasks and located in .\Inputs\ScheduleTasks\TasksSchedulesXml -->
  <!--   > SchedCmd..: The executable to be used. It will replace the %command% in the xml file.                                           -->
  <!--   > SchedArg..: The arguments line to pass to the executable. If a script is specified, it should present in                        -->
  <!--                 .\Inputs\ScheduleTasks\TasksSchedulesScripts                                                                        -->
  <!--   > SchedDir..: The effective path context when the schedule is run - use %BaseDir% to refer to the directory value speciefied in   -->
  <!--                 the "BaseDir" parameters of the section <TaskSchedules> (this one, yup).                                            -->
  <!--   > SchedDsc..: The description field for this task.                                                                                -->
  <!--   > SchedPth..: The folder name where the task will be stored in the Tasks Scheduler console.                                       -->
  <!-- ################################################################################################################################### -->
    <!-- flushing Sensible groups with MCS-GroupsFlushing.ps1 -->
    <SchedTask Name="MCS - Sensitive Groups Flushing" 
               Xml="MCS-GroupsFlushing.xml">
              <SchedCmd>powershell.exe</SchedCmd> 
              <SchedArg>-windowstyle hidden -file .\MCS-GroupsFlushing.ps1</SchedArg>
              <SchedDir>%BaseDir%\MCS-GroupsFlushing</SchedDir>
			        <SchedDsc>Flush highly sensitive groups (see MCS-GroupsScheduling.csv for details)</SchedDsc>
              <SchedPth>HardenAD</SchedPth>
    </SchedTask>
  </TaskSchedules>
  
	<Microsoft365>
  <!-- ################################################################################################################################### -->
  <!-- the <Microsoft365> section is used to manually generated Azure AD Connect synchronisation OU (if requested).                        -->
  <!-- ################################################################################################################################### -->
    <Target>OU=Ordinateurs,OU=Integration,ROOTDN</Target>
		<Target>OU=Utilisateurs,OU=Integration,ROOTDN</Target>
  </Microsoft365>
  
	<Sequence>
  <!-- ################################################################################################################################### -->
  <!-- the <Sequence> section define the different tasks to iterate in "sequence" (can't resist to this one).                              -->
	<!-- To deal with highlight color in display, use the ` to initiate and end a color change in your string, then use one of the three     -->
  <!-- characters specified in value AltBaseHTxt(A,B, or C) to select your color: the color will switch back to normal at the next `.      -->
  <!--			                                                                                                                               -->
  <!-- The default highlight values are those one:                                                                                         -->
  <!--   > `[my text` : magenta                                                                                                            -->
  <!--   > `(my text` : yellow                                                                                                             -->
  <!--   > `{my text` : gray                                                                                                               -->
  <!--			                                                                                                                               -->
  <!-- Some special inputs are usefull to replace value dynamically :                                                                   	 -->
  <!--	 > FileName   : replace with the value of this file                                                                                -->
  <!--	 > RootDN     : replace with domain root DN                                                                                        -->
  <!--			                                                                                                                               -->
  <!-- Each task ID is executed in sequence, based on the Number vaue (ascending). Each Task ID use the following attributes:              -->			                                                                                                                               
  <!--   > Number         : Define the squence order, the lowest will be run first.                                                        --> 
  <!--   > Name           : ID task name as refered in the final log output.                                                               -->
  <!--   > CallingFunction: Name of the function to be called from one of the .psm1 files present in the modules directory.                -->
  <!--   > UseParameters  : Mandatory (but could be empty). Specify parameter to pass as argument to CallingFunction.                      -->
  <!--                      Use on per parameter and sort them in sequence (your script should refer them using input ordering).           -->
  <!--   > TaskEnabled    : YES or NO. When set to NO, the tasks is disabled and will not be applied.                                      -->
  <!-- ################################################################################################################################### -->

    <!-- SET MS-DS-MACHINEACCOUNTQUOTA TO 0                                                                                                -->
		<Id Number="010" Name="Restrict computer junction to the domain">
			<CallingFunction>Set-msDSMachineAccountQuota</CallingFunction>
			<!--Parameter: new ms-DS-MachineAccountQuota value                                                                                   -->
      <UseParameters>0</UseParameters>
			<TaskEnabled>Yes</TaskEnabled>
			<TaskDescription>set `(msDSMachineAccountQuota` to `(0` to restrict domain junction</TaskDescription>
		</Id>
    
    <!-- ENABLE THE AD RECYCLE BIN                                                                                                         -->
		<Id Number="020" Name="Activate Active Directory Recycle Bin">
			<CallingFunction>Set-ADRecycleBin</CallingFunction>
			<UseParameters></UseParameters>
			<TaskEnabled>Yes</TaskEnabled>
			<TaskDescription>activate the `(AD Recycle Bin` optional feature</TaskDescription>
		</Id>	
    
    <!-- CONFIGURE ALL AD SITE LINKS WITH THE NOTIFY OPTIONS                                                                               --> 
		<Id Number="030" Name="Set Notify on every Site Links">
			<CallingFunction>Set-SiteLinkNotify</CallingFunction>
			<UseParameters></UseParameters>
			<TaskEnabled>Yes</TaskEnabled>
			<TaskDescription>set `(notify` on every `(Site Links</TaskDescription>
		</Id>
    
		<!-- ACTIVATE THE GPO CENTRAL STORE                                                                                                    -->	
    <Id Number="040" Name="Set GPO Central Store">
			<CallingFunction>Set-GpoCentralStore</CallingFunction>
			<UseParameters></UseParameters>
			<TaskEnabled>Yes</TaskEnabled>
			<TaskDescription>set `(GPO Central Store` and update `{adm` and `{admx` files</TaskDescription>
		</Id>
    
    <!-- GENERATE NEW ADMINISTRATION ORGANIZATIONAL UNIT                                                                                   -->
		<Id Number="050" Name="Set Administration Organizational Unit">
			<CallingFunction>Set-TreeOU</CallingFunction>
			<!--Parameter: class name from OrganizationalUnits | ouTree in this document                                                         -->
      <UseParameters>SMB-ADMIN-FR</UseParameters>
			<TaskEnabled>Yes</TaskEnabled>
			<TaskDescription>set `(Administration` organizational unit</TaskDescription>
		</Id>
    
    <!-- GENERATE NEW DEFAULT OBJECTS LOCATION TREE                                                                                        -->
		<Id Number="060" Name="Set Provisionnong Organizational Unit">
			<CallingFunction>Set-TreeOU</CallingFunction>
			<!--Parameter: class name from OrganizationalUnits | ouTree in this document                                                         -->
      <UseParameters>PROVISIONNING-FR</UseParameters>
			<TaskEnabled>Yes</TaskEnabled>
			<TaskDescription>set `(Provisionning` organizational unit</TaskDescription>
		</Id>
    
    <!-- RELOCATE NEW USER/GROUP OBJECT LOCATION                                                                                           -->
		<Id Number="070" Name="Default user location on creation">
			<CallingFunction>Set-DefaultObjectLocation</CallingFunction>
			<!--Parameter: user or computer                                                                                                      -->
      <UseParameters>User</UseParameters>
      <!--Parameter: OU distinguishedName. Use RootDN to automatically fill-in the domain name                                             -->
			<UseParameters>OU=utilisateurs,OU=Integration,RootDN</UseParameters>
			<TaskEnabled>Yes</TaskEnabled>
			<TaskDescription>set `(user objects` default location</TaskDescription>
		</Id>
    
    <!-- RELOCATE NEW COMPUTER OBJECT LOCATION                                                                                             -->
		<Id Number="071" Name="Default computer location on creation">
			<CallingFunction>Set-DefaultObjectLocation</CallingFunction>
			<!--Parameter: user or computer                                                                                                      -->
      <UseParameters>Computer</UseParameters>
			<!--Parameter: OU distinguishedName. Use RootDN to automatically fill-in the domain name                                             -->
      <UseParameters>OU=ordinateurs,OU=Integration,RootDN</UseParameters>
			<TaskEnabled>Yes</TaskEnabled>
			<TaskDescription>set `(computer objects` default location</TaskDescription>
		</Id>
    
    <!-- GENERATE NEW ADMIN ACCOUNTS ON WHICH THE DELEGATION MODEL WILL WORKS                                                              -->
		<Id Number="080" Name="Create administration accounts">
			<CallingFunction>New-AdministrationAccounts</CallingFunction>
			<UseParameters></UseParameters>
			<TaskEnabled>Yes</TaskEnabled>
			<TaskDescription>create `(administration accounts` used by the tier model</TaskDescription>
		</Id>
    
    <!-- GENERATE NEW ADMIN GOURPS ON WHICH THE DELEGATION MODEL WILL WORKS                                                                -->
		<Id Number="090" Name="Create administration groups">
			<CallingFunction>New-AdministrationGroups</CallingFunction>
			<!-- Parameter: KeePass password for the kdbx database                                                                               -->
      <UseParameters>H4rd3n@D!!</UseParameters>
			<TaskEnabled>Yes</TaskEnabled>
			<TaskDescription>create `(administration groups` used by the tier model</TaskDescription>
		</Id>
    
    <!-- GENERATE MICROSOFT 365 SYNCING ORGANIZATIONAL UNITS: MANUAL INPUT                                                                 -->
		<Id Number="100" Name="Create Microsoft 365 syncing Oroganizational Units">
			<CallingFunction>New-M365OrganizationalUnits</CallingFunction>
			<!--Parameter: Name of the OU to be generated                                                                                        -->
      <UseParameters>Microsoft 365</UseParameters>
      <!--Parameter: action mode. Manual refers to entries from Microsft365 | Target and Automatic mode will cross the OU tree and         -->
      <!--           generate the sync OU each time it founds a user/computers/groups object within it.                                    -->
      <UseParameters>Manual</UseParameters>
			<TaskEnabled>Yes</TaskEnabled>
			<TaskDescription>create `(synchronization OUs` used by `[Azure AD Connect`</TaskDescription>
		</Id>
    
    <!-- GENERATE MICROSOFT 365 SYNCING ORGANIZATIONAL UNITS: AUTOMATIC INPUT                                                              -->
		<Id Number="101" Name="Create Microsoft 365 syncing Oroganizational Units">
			<CallingFunction>New-M365OrganizationalUnits</CallingFunction>
			<!--Parameter: Name of the OU to be generated -->
      <UseParameters>Microsoft 365</UseParameters>
      <!--Parameter: action mode. Manual refers to entries from Microsft365 | Target and Automatic mode will cross the OU tree and         -->
      <!--           the sync OU each time it founds a user/computers/groups object within it.                                             --> 
      <UseParameters>Automatic</UseParameters>
      <!--Parameter: used in combination with automatic mode: set the base DN for analysis                                                 -->
      <UseParameters>RootDN</UseParameters>
			<TaskEnabled>Yes</TaskEnabled>
			<TaskDescription>create `(synchronization OUs` used by `[Azure AD Connect`</TaskDescription>
		</Id>
    
    <!-- UPDATE THE MIGTABLE FILE TO REFLECT SOURCE/TARGET DOMAIN IDENTITIES                                                               -->
    <Id Number="110" Name="Generate migration table for group policies">
      <CallingFunction>Publish-MigrationTable</CallingFunction>
      <!--Parameter: name of the migtable file to use as reference for translation                                                         -->
      <UseParameters>dev.lab132.local.migtable</UseParameters>
      <TaskEnabled>Yes</TaskEnabled>
      <TaskDescription>Generate `(migration table` used by import function when adding a `[group policy`</TaskDescription>
    </Id>
    
    <!-- GENERATE A TRANSLATION FILE FOR GPO PREFERENCE IMPORT                                                                             -->
    <Id Number="120" Name="Generate translation table for group policies preferences">
      <CallingFunction>Update-PreferenceXML</CallingFunction>
      <!--Parameter: name of the preftable file to use as reference for translation                                                        -->
      <UseParameters>dev.lab132.local.preftable</UseParameters>
      <TaskEnabled>Yes</TaskEnabled>
      <TaskDescription>Update `(group policy xml preference files` with `[new SID values` according to the preferences migration table</TaskDescription>
    </Id>
		
    <!-- IMPORT WMI FILTERS                                                                                                                -->
		<Id Number="125" Name="Import additional WMI Filters">
      <CallingFunction>Import-WmiFilters</CallingFunction>
			<!--Parameter: name of the domain from which the mof file has been generated                                                         -->
      <UseParameters>DEV.LAB132.LOCAL</UseParameters>
      <TaskEnabled>Yes</TaskEnabled>
    <TaskDescription>Import `(WMI filter` to the domain</TaskDescription>
    </Id>
    
    <!-- IMPORT GPOs                                                                                                                       -->
    <Id Number="130" Name="Import new GPO or update existing ones">
      <CallingFunction>New-GpoObject</CallingFunction>
      <UseParameters></UseParameters>
      <TaskEnabled>Yes</TaskEnabled>
      <TaskDescription>Import or update `(group policy objects` to the domain and link them</TaskDescription>
    </Id>

    <!-- LAPS SCHEMA UPDATE AND POWERSHELL TOOLING DEPLOYMENT                                                                              -->
    <!-- Warning: this only works with .Net 4.0 or greater.                                                                                -->
    <Id Number="134" Name="Update Ad schema for LAPS and deploy PShell tools">
      <CallingFunction>Install-Laps</CallingFunction>
      <!-- Parameter: ForceDcIsSchemaOwner (default) will require that the running system is also the Schema Master owner                  -->
      <!--            IgnoreDcIsSchameOwner will remove this requierment (child domain, etc.)                                              -->
      <UseParameters>ForceDcIsSchemaOwner</UseParameters>
      <TaskEnabled>Yes</TaskEnabled>
      <TaskDescription>Update `(AD Schema` for `[LAPS` and add `(PShell add-on`</TaskDescription>
    </Id>

    <!-- LAPS DEPLOYMENT SCRIPT UPDATE                                                                                                      -->
    <Id Number="135" Name="Update LAPS deployment scripts">
      <CallingFunction>Set-LapsScripts</CallingFunction>
      <!-- Parameter: use NETLOGON or SYSVOL for a dynamic location. Else enter the UNC Path                                               -->
      <UseParameters>NETLOGON\LAPS</UseParameters>
      <TaskEnabled>Yes</TaskEnabled>
      <TaskDescription>Update `(LAPS Scripts` to match with the domain name</TaskDescription>
    </Id>
    
    <!-- IMPORT SCHEDULE TASKS                                                                                                             -->
    <Id Number="140" Name="Import schedule tasks on the running system">
      <CallingFunction>New-ScheduleTasks</CallingFunction>
      <UseParameters></UseParameters>
      <TaskEnabled>Yes</TaskEnabled>
      <TaskDescription>Import new `(schedule tasks` to the `[running system`</TaskDescription>
    </Id>
  
    <!-- RESET SENSIBLE GROUPS                                                                                                             -->
    <Id Number="150" Name="Reset Group Memberships">
      <CallingFunction>Reset-GroupMembership</CallingFunction>
      <UseParameters></UseParameters>
      <TaskEnabled>No</TaskEnabled>
      <TaskDescription>Reset `(groups's membeberships` to the `[trusted list`</TaskDescription>
    </Id>
	</Sequence>
</Settings>

